<?php
//color rgb is coords
header("Content-type: image/svg+xml");
//set headers to NOT cache a page
header("Cache-Control: no-cache, must-revalidate"); //HTTP 1.1
header("Pragma: no-cache"); //HTTP 1.0
header("Expires: Sat, 26 Jul 1997 05:00:00 GMT"); // Date in the past

echo '<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>';
$svgwidth=500;
$svgheight=500;
?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/SVG/DTD/svg10.dtd">
<svg width="<?php echo $svgwidth;?>px" height="<?php echo $svgheight;?>px"
xmlns="http://www.w3.org/2000/svg">
<desc>Good luck solving this Geocache Puzzle</desc>
<?php
srand((double) microtime() * 1000000); //initalizing random generator
$north = rand(0, 4);
$west = rand(5, 9);

for ($i = 0; $i < 10; $i+=1) {

	switch ($i){
		case $north:
			do_north();
			break;
		case $west:
			do_west();
			break;
		default:
			do_random();
			break;
	}

}

function do_random(){
	global $svgwidth, $svgheight;

	$r = floor(rand(0,$svgwidth/2)); //avoid getting circles outside of viewbox
	$x = floor(rand($r, $svgwidth-$r)); //avoid getting a range 0..0 for rand function
	$y = floor(rand($r,$svgheight-$r));

	$red = floor(rand(0,255));
	$blue = floor(rand(0,255));
	$green = floor(rand(0,255));
	$color = "rgb(".$red.",".$green.",".$blue.")";
	print "\t<circle cx=\"$x\" cy=\"$y\" r=\"$r\" style=\"fill:$color;\"/>\n";
}

function do_north(){
// set up the "north" rectangle
	global $svgwidth, $svgheight;

	$r = floor(rand(0,$svgwidth/2)); //avoid getting circles outside of viewbox
	$x = floor(rand($r, $svgwidth-$r)); //avoid getting a range 0..0 for rand function
	$y = floor(rand($r,$svgheight-$r));

	$red = (int) '33';
	$blue = (int) '50';
	$green = (int) '092';

	$color = 'rgb('.$red.','.$blue.','.$green.')';
	print "\t<circle cx=\"$x\" cy=\"$y\" r=\"$r\" style=\"fill:$color;\"/>\n";


}

function do_west(){
	// set up the "west" rectangle
	global $svgwidth, $svgheight;

	$r = floor(rand(0,$svgwidth/2)); //avoid getting circles outside of viewbox
	$x = floor(rand($r, $svgwidth-$r)); //avoid getting a range 0..0 for rand function
	$y = floor(rand($r,$svgheight-$r));

	$red = (int) '084';
	$blue = (int) '15';
	$green = (int) '031';

	$color = 'rgb('.$red.','.$blue.','.$green.')';
	print "\t<circle cx=\"$x\" cy=\"$y\" r=\"$r\" style=\"fill:$color;\"/>\n";
} ?>
</svg>
<?php

/*

Cache title: @285Technology Series #1 - Color Spheres
Cache Size: Other
D/T: 3.5/2
Posted Coords:  33째 49.639'N  84째 15.148'W
Final Coords: 33째 50.092'N 84째 15.031'W
Cache Intro:
This cache is part of the "@285Technology" Series of Caches by Rfair404 & Boo2931. All of the caches in this series have two things in common.
1 - They are located close to I-285 - most of the cache locations provide an interesting view of 285 that you've probably never seen before.
2 - They incorporate some form of technology in the puzzle - use of third party tools such as web browsers may be required.

Cache Description:

The cache is NOT at the posted coordinates. The posted coordinates will take you directly over 285 via an overpass.

Please use extra caution and geo-sense while hunting this cache.

This cache require you to visit webpages located outside of geocaching.com and are in no way audited or approved by groundspeak directly. We've made every effort to ensure that the assets are secure, however you should USE AT YOUR OWN RISK.

Good luck!

Cache Image: http://booyacht.com/gc-games/puzzle1.psvg

Reviewer Note: cache coords are hidden in two of the 10 circles
Look carefully at the colors of the shapes, twof of them repeat continually - the r,g,b values of the repeating shapes are the coordinates

CO Note: cache is nano in fence along 285/montreal
*/
